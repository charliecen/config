#CentOS6.5安装gitlab

# Distribution      : CentOS 6.5 Minimal
# GitLab version    : 7.4.5
# Web Server        : Nginx
# Init system       : sysvinit
# Database          : MySQL
# Additional Notes  : In order to get a proper Ruby setup we build it from source

#一，安装源和依赖包
cd /usr/local/src
#增epel源,如果你是i686系统，请把x86_64修改下。
wget -O /etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-6 https://www.fedoraproject.org/static/0608B895.txt
rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-6
rpm -Uvh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm

#确认是否安装成功
rpm -qa gpg*
gpg-pubkey-0608b895-4bd22942

#增puias源
wget -O /etc/yum.repos.d/PUIAS_6_computational.repo https://gitlab.com/gitlab-org/gitlab-recipes/raw/master/install/centos/PUIAS_6_computational.repo
wget -O /etc/pki/rpm-gpg/RPM-GPG-KEY-puias http://springdale.math.ias.edu/data/puias/6/x86_64/os/RPM-GPG-KEY-puias
rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-puias

#验证是否成功
rpm -qa gpg*
gpg-pubkey-41a40948-4ce19266

#查看仓库源
yum repolist
已加载插件：fastestmirror
Loading mirror speeds from cached hostfile
 * PUIAS_6_computational: www.puias.princeton.edu
 * epel: ftp.sjtu.edu.cn
仓库标识                                                                  仓库名称                                                                                           状态
PUIAS_6_computational                                                     PUIAS computational Base 6 - x86_64                                                                 2,638
base                                                                      CentOS-6 - Base - 163.com                                                                           6,518
*epel                                                                     Extra Packages for Enterprise Linux 6 - x86_64                                                     11,148
extras                                                                    CentOS-6 - Extras - 163.com                                                                            36
updates                                                                   CentOS-6 - Updates - 163.com                                                                          727
repolist: 21,067

#如果此列表中没有epel和PUIAS_6_computational，请执行以下命令
yum-config-manager --enable epel --enable PUIAS_6_computational



#二，安装依赖包

#安装依赖包
yum -y update
yum -y groupinstall 'Development Tools'
yum -y install readline readline-devel ncurses-devel gdbm-devel glibc-devel tcl-devel openssl-devel curl-devel expat-devel db4-devel byacc sqlite-devel libyaml libyaml-devel libffi libffi-devel libxml2 libxml2-devel libxslt libxslt-devel libicu libicu-devel system-config-firewall-tui redis sudo wget crontabs logwatch logrotate perl-Time-HiRes git cmake libcom_err-devel.i686 libcom_err-devel.x86_64


#三，安装邮件服务
#postfix或者sendmail，官网上安装是postfix，本人默认就装来sendmial，所以此步骤省略
yum install -y postfix

#四，安装git
#默认centos的git版本是1.7.10，所以要先删除，然后再下载源码安装
git --version

yum remove git -y

yum install zlib-devel perl-CPAN gettext curl-devel expat-devel gettext-devel openssl-devel

mkdir /tmp/git && cd /tmp/git
curl --progress https://www.kernel.org/pub/software/scm/git/git-2.1.3.tar.gz | tar xz
cd  git-2.1.3/ && ./configure && make && make prefix=/usr/local install

#完成后验证
which git
/usr/local/bin/git
git --version
git version 2.1.3

#五，安装ruby
#ruby版本需要2.0+，所以先卸载系统已存在的
yum remove ruby
#如果是源码安装的
cd (your-ruby-source-path) && make uninstall

mkdir /tmp/ruby && cd /tmp/ruby
curl --progress ftp://ftp.ruby-lang.org/pub/ruby/2.1/ruby-2.1.2.tar.gz | tar xz
cd ruby-2.1.2 && ./configure --disable-install-rdoc && make && make prefix=/usr/local install

#安装bundler
gem install bundler --no-doc

#完成后验证
which ruby
/usr/local/bin/ruby
ruby -v
ruby 2.1.2p95 (2014-05-08 revision 45877) [x86_64-linux]

#六，创建系统用户
adduser --system --shell /bin/bash --comment 'GitLab' --create-home --home-dir /home/git/ git

#增加/usr/local/bin
visudo
Defaults    secure_path = /sbin:/bin:/usr/sbin:/usr/bin:/usr/local/bin

#七，安装数据库
#官网给出两个选择，mysql、postgreSQL，我使用的mysql
#centos默认会安装5.1版本的mysql，所以要源码安装，此步骤掠过。。。


#mysql的版本至少5.5.14或更新
mysql --version
mysql  Ver 14.14 Distrib 5.5.40, for Linux (x86_64) using readline 5.1

#创建数据库用户并授权
mysql -u root -p

mysql> CREATE USER 'git'@'localhost' IDENTIFIED BY 'gitpwd';

mysql> show variables like "%engine";
+------------------------+--------+
| Variable_name          | Value  |
+------------------------+--------+
| default_storage_engine | InnoDB |
| storage_engine         | InnoDB |
+------------------------+--------+
2 rows in set (0.01 sec)

#如果不是InnoDB引擎，需执行下面命令
mysql> SET storage_engine=INNODB;

#创建数据库
mysql> CREATE DATABASE IF NOT EXISTS `gitlabhq_production` DEFAULT CHARACTER SET `utf8` COLLATE `utf8_unicode_ci`;
#给用户授权
mysql> GRANT SELECT, LOCK TABLES, INSERT, UPDATE, DELETE, CREATE, DROP, INDEX, ALTER ON `gitlabhq_production`.* TO 'git'@'localhost';

#测试是否能够成功登录
mysql -ugit -pgitpwd -D gitlabhq_production
Reading table information for completion of table and column names
You can turn off this feature to get a quicker startup with -A

Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 30
Server version: 5.5.40-log Source distribution

Copyright (c) 2000, 2014, Oracle and/or its affiliates. All rights reserved.

Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

mysql> \q

#八，配置redis
chkconfig redis on

cp /etc/redis.conf /etc/redis.conf.orig

#修改监听端口
sed 's/^port .*/port 0/' /etc/redis.conf.orig |tee /etc/redis.conf

#增加内容
echo 'unixsocket /var/run/redis/redis.sock' |tee -a /etc/redis.conf
echo -e 'unixsocketperm 0770' |tee -a /etc/redis.conf

#创建目录改权限
mkdir /var/run/redis
chown redis:redis /var/run/redis
chmod 755 /var/run/redis

#启动服务
service redis restart

#附加git到redis组
usermod -aG redis git

#九，安装gitlab
cd /home/git

#下载源码
sudo -u git -H git clone https://gitlab.com/gitlab-org/gitlab-ce.git -b 7-4-stable gitlab

#配置
cd gitLab/
sudo -u git -H cp config/gitlab.yml.example config/gitlab.yml

sudo -u git -H vim config/gitlab.yml
gitlab:
    ## Web server settings (note: host is the FQDN, do not include http://)
    host: localhost
    port: 80
    https: false

#修改目录权限
chown -R git log/
chown -R git tmp/
chmod -R u+rwX log/
chmod -R u+rwX tmp/
chmod -R u+rwX tmp/pids/
chmod -R u+rwX tmp/sockets/
chmod -R u+rwX  public/uploads

#创建目录
sudo -u git -H mkdir /home/git/gitlab-satellites
chmod u+rwx,g=rx,o-rwx /home/git/gitlab-satellites

#拷贝文件
sudo -u git -H cp config/unicorn.rb.example config/unicorn.rb

#查看系统核心数
nproc
4

#编辑配置
sudo -u git -H vim config/unicorn.rb
worker_processes 4

#拷贝配置
sudo -u git -H cp config/initializers/rack_attack.rb.example config/initializers/rack_attack.rb

#定义全局的用户和邮箱
sudo -u git -H git config --global user.name "GitLab"
sudo -u git -H git config --global user.email "example@example.com"
sudo -u git -H git config --global core.autocrlf input

#拷贝配置
sudo -u git -H cp config/resque.yml.example config/resque.yml

#连接redis配置，默认配置，未修改
sudo -u git -H vim config/resque.yml

#十，配置gitlab数据库
sudo -u git cp config/database.yml.mysql config/database.yml

#编辑配置文件
sudo -u git -H vim config/database.yml
production:
  adapter: mysql2
  encoding: utf8
  collation: utf8_general_ci
  reconnect: false
  database: gitlabhq_production
  pool: 10
  username: git
  password: "gitpwd"
  host: localhost
  socket: /var/lib/mysql/mysql.sock

#修改文件权限，只有git用户可读
sudo -u git -H chmod o-rwx config/database.yml

#十一，安装gem
cd /home/git/gitLab
sudo -u git -H bundle install --deployment --without development test postgres aws

#十二，安装gitlab－shell
#官网上给的gitlab－shell版本是2.1.0，后面会有问题（本地到远程不能连接），网上查找问题是版本问题，需要gitlab－shell的版本是2.0.1
sudo -u git -H bundle exec rake gitlab:shell:install[v2.0.1] REDIS_URL=unix:/var/run/redis/redis.sock RAILS_ENV=production

#编辑配置
sudo -u git -H vim /home/git/gitlab-shell/config.yml
---
user: git
gitlab_url: https://localhost/
http_settings:
  self_signed_cert: true
repos_path: "/home/git/repositories/"
auth_file: "/home/git/.ssh/authorized_keys"
redis:
  bin: "/usr/bin/redis-cli"
  namespace: resque:gitlab
  socket: "/var/run/redis/redis.sock"
log_level: INFO
audit_usernames: false

#十三，初始化数据库
sudo -u git -H bundle exec rake gitlab:setup RAILS_ENV=production

#可以设置管理员密码(此步骤可省略。。。)
sudo -u git -H bundle exec rake gitlab:setup RAILS_ENV=production GITLAB_ROOT_PASSWORD=newpassword

#十四，下载服务脚本
wget -O /etc/init.d/gitlab https://gitlab.com/gitlab-org/gitlab-recipes/raw/master/init/sysvinit/centos/gitlab-unicorn
chmod +x /etc/init.d/gitlab
chkconfig --add gitlab
chkconfig gitlab on

#设置logrotate
cp lib/support/logrotate/gitlab /etc/logrotate.d/gitlab

#检测应用状态
sudo -u git -H bundle exec rake gitlab:env:info RAILS_ENV=production

sudo -u git -H bundle exec rake assets:precompile RAILS_ENV=production

#启动服务
service gitlab start

#十五，配置web服务
#本人使用的nginx
yum -y install nginx
chkconfig nginx on
wget -O /etc/nginx/conf.d/gitlab.conf https://gitlab.com/gitlab-org/gitlab-ce/raw/master/lib/support/nginx/gitlab-ssl

#添加nginx用户到git组
usermod -a -G git nginx
chmod g+rx /home/git/

#修改配置,修改server_name
vim /etc/nginx/conf.d/gitlab.conf

#启动服务
service nginx start

#访问登录
#用户名：root
#密码：5iveL!fe






############问题故障解决##########
#===============================
#问题一
#===============================
su - git -c "cd gitlab/;bundle install --deployment --without development test postgres puma aws"

#报错信息：
	Fetching source index from https://rubygems.org/
	Retrying source fetch due to error (2/3): Bundler::HTTPError Could not fetch specs from https://rubygems.org/
	Retrying source fetch due to error (3/3): Bundler::HTTPError Could not fetch specs from https://rubygems.org/
	Could not find gitlab-grack-2.0.0.pre in any of the sources
#解决办法：
	#移除源
	su - git -c "gem sources --remove https://rubygems.org/"
	https://rubygems.org/ removed from sources
	#添加源
	su - git -c "gem sources -a https://ruby.taobao.org/"
	https://ruby.taobao.org/ added to sources
	#查看源
	su - git -c "gem sources -l"
	*** CURRENT SOURCES ***

	https://ruby.taobao.org/
#继续执行
bundle install --deployment --without development test postgres puma was

#报错信息：
	Gem::RemoteFetcher::UnknownHostError: no such name (https://rubygems.org/gems/net-scp-1.1.2.gem)
	An error occurred while installing net-scp (1.1.2), and Bundler cannot continue.
	Make sure that `gem install net-scp -v '1.1.2'` succeeds before bundling.
#解决办法：
	gem install net-scp －v '1.1.2'

#报错信息：
	Gem::RemoteFetcher::FetchError: Errno::ETIMEDOUT: Connection timed out - connect(2) for "rubygems.global.ssl.fastly.net" port 443 (https://rubygems.org/gems/httparty-0.13.0.gem)
	An error occurred while installing httparty (0.13.0), and Bundler cannot continue.
	Make sure that `gem install httparty -v '0.13.0'` succeeds before bundling."
#解决办法：
	gem install httparty -v '0.13.0'

#如果有以下提示，无需理会，继续运行安装命令，直到安装完成为止。
	Could not fetch specs from https://rubygems.org/
 
#================================
#问题二
#================================
#报错信息：
sudo -u git -H bundle exec rake gitlab:setup RAILS_ENV=production
	This will create the necessary database tables and seed the database.
	You will lose any previous data stored in the database.
	Do you want to continue (yes/no)? yes

	Couldn't create database for {"adapter"=>"mysql2", "encoding"=>"utf8", "collation"=>"utf8_general_ci", "reconnect"=>false, "database"=>"gitlabhq_production", "pool"=>10, "username"=>"git", "password"=>"gitpwd"}, {:charset=>"utf8", :collation=>"utf8_general_ci"}
	(If you set the charset manually, make sure you have a matching collation)
	-- enable_extension("plpgsql")
	rake aborted!
	Mysql2::Error: Can't connect to local MySQL server through socket '/tmp/mysql.sock' (2)

#解决办法：
vim config/database.yml
	#mysql.sock的位置指定，默认在/tmp目录下
	socket: /var/lib/mysql/mysql.sock

#============================
#问题三
#============================
#报错信息：
	Running /home/git/gitlab-shell/bin/check
	Check GitLab API access: /home/git/gitlab-shell/lib/gitlab_net.rb:122:in `read': No such file or directory @ rb_sysopen - /home/git/gitlab-shell/.gitlab_shell_secret (Errno::ENOENT)
		from /home/git/gitlab-shell/lib/gitlab_net.rb:122:in `secret_token'
		from /home/git/gitlab-shell/lib/gitlab_net.rb:79:in `get'
		from /home/git/gitlab-shell/lib/gitlab_net.rb:39:in `check'
		from /home/git/gitlab-shell/bin/check:11:in `<main>''

#之前提到过的，由于gitlab-shell版本问题导致，按照我安装的版本应该没什么问题。

























#七，数据库初始化
/etc/init.d/redis start

su - git -c "bundle exec rake gitlab:setup RAILS_ENV=production --verbose"
#记住登录帐号密码
	Administrator account created:

	login.........admin@local.host
	password......5iveL!fe

#下载启动脚本
wget https://raw.github.com/gitlabhq/gitlab-recipes/master/init/sysvinit/centos/gitlab-unicorn -P /etc/init.d/
mv /etc/init.d/gitlab-unicorn /etc/init.d/gitlab
chmod +x /etc/init.d/gitlab

#启动报错信息：
	/etc/init.d/gitlab start
	Starting unicorn: bash: bin/web: 没有那个文件或目录
	                                                           [失败]
	Starting sidekiq: bash: bin/background_jobs: 没有那个文件或目录
	                                                           [失败]

su - git -c "cd gitlab/;cp -r script/* bin/"

/etc/init.d/gitlab start
Starting unicorn:                                          [确定]
Starting sidekiq:                                          [确定]

#八，安装配置nginx
cd /usr/local/src/lnmp-full && ./install(只需安装nginx)

mkdir /usr/local/nginx/conf/vhost/ && cp /home/git/gitlab/lib/support/nginx/gitlab /usr/local/nginx/conf/vhost/gitlab.conf
sed -i '/server_name/s/server_name .*/server_name 192.168.1.137;/' /usr/local/nginx/conf/vhost/gitlab.conf
sed -i '45,69s/^/#/g' /usr/local/nginx/conf/nginx.conf && /etc/init.d/nginx start


#访问页面
http://192.168.1.137






